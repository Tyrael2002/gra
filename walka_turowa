#include <iostream>
#include <stdlib.h>
#include <time.h>
#include <cstring>
#include <windows.h>
#include <stdio.h>
#include <cmath>
#include <math.h>
#include <conio.h>

using namespace std;

char *tr(char *str)
  {
   static char buff[256];
   char cp[]="\245\206\251\210\344\242\230\276\253\244\217\250\235\343\340\227\275\215ąćęłńóśżźĄĆĘŁŃÓŚŻŹ";
   if(strlen(str)>=sizeof(buff)) return str;
   char *bf=buff;
   while(*str)
     {
      char *pos=strchr(cp+18,*str);
      *(bf++)=pos?*(pos-18):*str;
      ++str;
     }
   *bf=0;
   return buff;
  }

int ZdrPrz = 100, ZdrTwj = 100, obronaprz, obronatwj, obrkuliognia=10, statustwj, statusprz, tura=0;
string cr, poztrd;

void SetColor(int forgC);

int main()
{
        cout <<tr ("Wybierz poziom trudności:") << endl;
        cout <<tr ("1.Łatwy") << endl;
        cout <<tr ("2.Średni") << endl;
        cout << "3.Trudny" << endl;
        cout << ' ' << endl;
        cout <<tr ("Wyjaśnienie poziomów trudności:") << endl;
        cout << ' ' << endl;
        cout <<tr ("Łatwy - obrażenia, które ty zadajesz są zwiększone o 50% z zaokrągleniem w górę.") << endl;
        cout << ' ' << endl;
        cout <<tr ("Średni - wartości zadawanych obrażeń (twoich i przeciwnika) nie ulegają zmianie.") << endl;
        cout << ' ' << endl;
        cout <<tr ("Trudny - obrażenia, które ty zadajesz są zmniejszone o 50% z zaokrągleniem w górę.") << endl;
        cin >> poztrd;
        cout << ' ' << endl;
    while((ZdrPrz>=0)&&(ZdrTwj>=0))
    {
        tura=tura+1;
        SetColor(34);
        if(statustwj==1)
        {
            cout <<tr ("Płoniesz! Tracisz 2 punkty zdrowia!") << endl;
            ZdrTwj=ZdrTwj-2;
            Sleep(750);
        }
        cout << "To jest " << tura << " tura!" << endl;
        cout <<tr ("Twoje zdrowie: ") << ZdrTwj << endl;
        cout << "Posiadasz " <<obronatwj<< " obrony" << endl;
        SetColor(100);
        cout << ' ' << endl;
        cout <<tr ("Zdrowie przeciwnika: ") << ZdrPrz << endl;
        cout << "Przeciwnik ma " <<obronaprz<< " obrony" << endl;
        SetColor(3);
        cout << ' ' << endl;
        cout <<tr ("Co chcesz zrobić?") << endl;
            cout <<tr ("1.Atak") << endl;
            cout <<tr ("2.Obrona") << endl;
            cout <<tr ("3.Użyj zaklęcia Kula ognia (NIEDOSTĘPNE)") << endl;
            cout <<tr ("4.Użyj przedmiotu (NIEDOSTĘPNE)") << endl;
            cin >> cr;
        if(cr=="1")
        {
                SetColor(25);
                srand((unsigned int)time(0));
                int attack2 = rand() % 10;
                int attack;
                if(poztrd=="1")
                {
                    attack2=attack2+(attack2/2);
                }
                else if(poztrd=="3")
                {
                    attack2=attack2-(attack2/2);
                }
                Sleep(150);
                cout <<tr ("Wylosowałeś: ") <<attack2<< endl;
                if(attack2==0)
                {
                    cout <<tr ("Nie zadałeś żadnych obrażeń!") << endl;
                    cout << ' ' << endl;
                    Sleep(500);
                }
                else if(obronaprz>=attack2)
                {
                    cout << "Zabierasz przeciwnikowi " <<attack2<<tr (" punkt/y/ów obrony.") << endl;
                    obronaprz=obronaprz-attack2;
                    cout << ' ' << endl;
                    Sleep(500);
                }
                else if(attack2>obronaprz)
                {
                    attack=attack2-obronaprz;
                    ZdrPrz=ZdrPrz-attack;
                    cout << "Zadajesz " <<attack<<tr (" obrażeń!") << endl;
                    obronaprz=0;
                    cout << ' ' << endl;
                    Sleep(500);
                }
            SetColor(29);
                if(statusprz==1)
                {
                    cout <<tr ("Przeciwnik płonie! Traci 2 punkty zdrowia.") << endl;
                    ZdrPrz=ZdrPrz-2;
                    Sleep(750);
                }
            cout << "Tura przeciwnika";
            srand((unsigned int)time(0));
            int turaprz = rand() % 3;
            string t[3];
            t[0]="atak";
            t[1]="obrona";
            t[2]="użyj zaklęcia";
            if(turaprz==0)
            {
                    SetColor(29);
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.' << endl;
                    Sleep(1000);
                    srand((unsigned int)time(0));
                    int attack2 = rand() % 10;
                    int attack;
                    cout <<tr ("Przeciwnik wylosował: ") <<attack2<< endl;
                    if(attack2==0)
                    {
                        cout <<tr ("Przeciwnik nie zadaje żadnych obrażeń!") << endl;
                        cout << ' ' << endl;
                        Sleep(500);
                    }
                    else if(obronatwj>=attack2)
                    {
                        cout << "Przeciwnik zabiera tobie " <<attack2<<tr (" punktów obrony.") << endl;
                        obronatwj=obronatwj-attack2;
                        cout << ' ' << endl;
                        Sleep(500);
                    }
                    else if(attack2>obronatwj)
                    {
                        attack=attack2-obronatwj;
                        ZdrTwj=ZdrTwj-attack;
                        cout << "Przeciwnik zadaje " <<attack<<tr (" obrażeń!") << endl;
                        obronatwj=0;
                        cout << ' ' << endl;
                        Sleep(500);
                    }
            }
            if(turaprz==1)
            {
                    SetColor(29);
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.' << endl;
                    Sleep(1000);
                    obronaprz=obronaprz+2;
                    cout <<tr ("Przeciwnik zwiększył obronę o 2 punkty!") << endl;
                    cout << ' ' << endl;
                    Sleep(500);
            }
            if(turaprz==2)
            {
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.' << endl;
                    Sleep(1000);
                    cout <<tr ("Przeciwnik rzuca kulą ognia!") << endl;
                    if(obronatwj>=obrkuliognia)
                    {
                        cout << "Tracisz " <<obrkuliognia<<tr (" punkt/y/ów obrony.") << endl;
                        obronatwj=obronatwj-10;
                        cout << ' ' << endl;
                        Sleep(500);
                    }
                    else if(obrkuliognia>obronatwj)
                    {
                        obrkuliognia=obrkuliognia-obronatwj;
                        ZdrTwj=ZdrTwj-obrkuliognia;
                        cout << "Przeciwnik zadaje " <<obrkuliognia<<tr (" obrażeń!") << endl;
                        obronatwj=0;
                        cout << ' ' << endl;
                        Sleep(500);
                    }
                    statustwj=1;
                    cout << ' ' << endl;
                    Sleep(500);
            }
        }
        if(cr=="2")
        {
            SetColor(25);
            obronatwj=obronatwj+2;
            Sleep(150);
            cout <<tr ("Zwiększyłeś obronę o 2 punkty") << endl;
            Sleep(500);
            cout << ' ' << endl;
            SetColor(29);
            if(statusprz==1)
            {
                cout <<tr ("Przeciwnik płonie! Traci 2 punkty zdrowia.") << endl;
                ZdrPrz=ZdrPrz-2;
                Sleep(750);
            }
            cout << "Tura przeciwnika";
            srand((unsigned int)time(0));
            int turaprz = rand() % 2;
            string t[2];
            t[0]="atak";
            t[1]="obrona";
            t[2]="użyj zaklęcia";
            if(turaprz==0)
            {
                    SetColor(29);
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.' << endl;
                    Sleep(1000);
                    srand((unsigned int)time(0));
                    int attack2 = rand() % 10;
                    int attack;
                    cout <<tr ("Przeciwnik wylosował: ") <<attack2<< endl;
                    if(attack2==0)
                    {
                        cout <<tr ("Przeciwnik nie zadaje żadnych obrażeń!") << endl;
                        cout << ' ' << endl;
                        Sleep(500);
                    }
                    else if(obronatwj>=attack2)
                    {
                        cout << "Przeciwnik zabiera tobie " <<attack2<<tr (" punktów obrony.") << endl;
                        obronatwj=obronatwj-attack2;
                        cout << ' ' << endl;
                        Sleep(500);
                    }
                    else if(attack2>obronatwj)
                    {
                        attack=attack2-obronatwj;
                        ZdrTwj=ZdrTwj-attack;
                        cout << "Przeciwnik zadaje " <<attack<<tr (" obrażeń!") << endl;
                        obronatwj=0;
                        Sleep(500);
                    }

            }
            if(turaprz==1)
            {
                    SetColor(29);
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.' << endl;
                    Sleep(1000);
                    obronaprz=obronaprz+2;
                    cout <<tr ("Przeciwnik zwiększył obronę o 2 punkty!") << endl;
                    cout << ' ' << endl;
                    Sleep(500);
            }
            if(turaprz==2)
            {
                Sleep(1000);
                cout << '.';
                Sleep(1000);
                cout << '.';
                Sleep(1000);
                cout << '.' << endl;
                Sleep(1000);
                cout <<tr ("Przeciwnik rzuca kulą ognia!") << endl;
                if(obronatwj>=obrkuliognia)
                {
                    cout << "Tracisz " <<obrkuliognia<<tr (" punkt/y/ów obrony.") << endl;
                    obronatwj=obronatwj-10;
                    cout << ' ' << endl;
                    Sleep(500);
                }
                else if(obrkuliognia>obronatwj)
                {
                    obrkuliognia=obrkuliognia-obronatwj;
                    ZdrTwj=ZdrTwj-obrkuliognia;
                    cout << "Przeciwnik zadaje " <<obrkuliognia<<tr (" obrażeń!") << endl;
                    obronatwj=0;
                    cout << ' ' << endl;
                    Sleep(500);
                }
                statustwj=1;
            }

        }

        if(cr=="3")
        {
            cout <<tr ("Rzucasz kulą ognia!") << endl;
            if(obronaprz>=obrkuliognia)
            {
                cout << "Zabierasz przeciwnikowi " <<obrkuliognia<<tr (" punkt/y/ów obrony.") << endl;
                obronaprz=obronaprz-10;
                cout << ' ' << endl;
                Sleep(500);
            }
            else if(obrkuliognia>obronaprz)
            {
                obrkuliognia=obrkuliognia-obronaprz;
                ZdrPrz=ZdrPrz-obrkuliognia;
                cout << "Zadajesz " <<obrkuliognia<<tr (" obrażeń!") << endl;
                obronaprz=0;
                cout << ' ' << endl;
                Sleep(500);
            }
            statusprz=1;
            SetColor(29);
            cout << ' ' << endl;
            if(statusprz==1)
            {
                cout <<tr ("Przeciwnik płonie! Traci 2 punkty zdrowia.") << endl;
                ZdrPrz=ZdrPrz-2;
                Sleep(750);
            }
            cout << "Tura przeciwnika";
            srand((unsigned int)time(0));
            int turaprz = rand() % 3;
            string t[3];
            t[0]="atak";
            t[1]="obrona";
            t[2]="użyj zaklęcia";
            if(turaprz==0)
            {
                SetColor(29);
                Sleep(1000);
                cout << '.';
                Sleep(1000);
                cout << '.';
                Sleep(1000);
                cout << '.' << endl;
                Sleep(1000);
                srand((unsigned int)time(0));
                int attack2 = rand() % 10;
                int attack;
                cout <<tr ("Przeciwnik wylosował: ") <<attack2<< endl;
                if(attack2==0)
                {
                    cout <<tr ("Przeciwnik nie zadaje żadnych obrażeń!") << endl;
                    cout << ' ' << endl;
                    Sleep(500);
                }
                else if(obronatwj>=attack2)
                {
                    cout << "Przeciwnik zabiera tobie " <<attack2<<tr (" punktów obrony.") << endl;
                    obronatwj=obronatwj-attack2;
                    cout << ' ' << endl;
                    Sleep(500);
                }
                else if(attack2>obronatwj)
                {
                    attack=attack2-obronatwj;
                    ZdrTwj=ZdrTwj-attack;
                    cout << "Przeciwnik zadaje " <<attack<<tr (" obrażeń!") << endl;
                    obronatwj=0;
                    cout << ' ' << endl;
                    Sleep(500);
                }
            }
            if(turaprz==1)
            {
                    SetColor(29);
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.' << endl;
                    Sleep(1000);
                    obronaprz=obronaprz+2;
                    cout <<tr ("Przeciwnik zwiększył obronę o 2 punkty!") << endl;
                    cout << ' ' << endl;
                    Sleep(500);
            }
            if(turaprz==2)
            {
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.';
                    Sleep(1000);
                    cout << '.' << endl;
                    Sleep(1000);
                    cout <<tr ("Przeciwnik rzuca kulą ognia!") << endl;
                    if(obronatwj>=obrkuliognia)
                    {
                        cout << "Tracisz " <<obrkuliognia<<tr (" punkt/y/ów obrony.") << endl;
                        obronatwj=obronatwj-10;
                        cout << ' ' << endl;
                        Sleep(500);
                    }
                    else if(obrkuliognia>obronatwj)
                    {
                        obrkuliognia=obrkuliognia-obronatwj;
                        ZdrTwj=ZdrTwj-obrkuliognia;
                        cout << "Przeciwnik zadaje " <<obrkuliognia<<tr (" obrażeń!") << endl;
                        obronatwj=0;
                        cout << ' ' << endl;
                        Sleep(500);
                    }
                    statustwj=1;
                    cout << ' ' << endl;
                    Sleep(500);
            }
        }

    if(ZdrTwj<=0)
    {
        cout <<tr ("Przegrałeś.") << endl;
        cout <<tr ("Dziękujemy za zagranie w naszą grę!") << endl;
        cout << "Autorzy: " << endl;
        cout << "Piotr Hartung" << endl << "Dawid Szymoniak" << endl;
        cout << ' ' << endl;
        cout << "Testerzy: " << endl;
        cout <<tr ("Emilia Kozłowska") << endl;
        cout <<tr ("Naciśnij cokolwiek aby wyjść");
        getch();
    }
    if(ZdrPrz<=0)
    {
        cout <<tr ("Wygrałeś") << endl;
        cout <<tr ("Udało ci się pokonać przeciwnika w ") << tura << " tur(y)!" << endl;
        cout <<tr ("Dziękujemy za zagranie w naszą grę!") << endl;
        cout << "Autorzy: " << endl;
        cout << "Piotr Hartung" << endl << "Dawid Szymoniak" << endl;
        cout << ' ' << endl;
        cout << "Testerzy: " << endl;
        cout <<tr ("Emilia Kozłowska") << endl;
        cout <<tr ("Naciśnij cokolwiek aby wyjść");
        getch();
    }
}
return 0;
}

void SetColor(int ForgC)
{
     WORD wColor;

     HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
     CONSOLE_SCREEN_BUFFER_INFO csbi;

     if(GetConsoleScreenBufferInfo(hStdOut, &csbi))
     {
          wColor = (csbi.wAttributes & 0xF0) + (ForgC & 0x0F);
          SetConsoleTextAttribute(hStdOut, wColor);
     }
     return;
}
